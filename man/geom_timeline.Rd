% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eq_functions.R
\name{geom_timeline}
\alias{geom_timeline}
\title{Display timelines}
\usage{
geom_timeline(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)
}
\arguments{
\item{mapping}{Set of aesthetic mappings created by \code{aes} or \code{aes_}.
If specified and \code{inherit.aes = TRUE} (the default), it is combined with the default mapping
at the top level of the plot. You must supply mapping if there is no plot mapping.}

\item{data}{The data to be displayed in this layer.
If \code{NULL}, the default, the data is inherited from the plot data as specified in the call to \code{ggplot}.}

\item{stat}{The statistical transformation to use on the data for this layer, as a string.}

\item{position}{Position adjustment, either as a string, or the result of a call to a position adjustment function.}

\item{na.rm}{If \code{FALSE}, the default, missing values are removed with a warning.
If \code{TRUE}, missing values are silently removed.}

\item{show.legend}{logical. Should this layer be included in the legends?
\code{NA}, the default, includes if any aesthetics are mapped.}

\item{inherit.aes}{If \code{FALSE}, overrides the default aesthetics, rather than combining with them.}

\item{...}{other arguments passed on to \code{layer}.
These are often aesthetics, used to set an aesthetic to a fixed value.}
}
\value{
A timeline plot with one point symbol for each date.
}
\description{
The \code{geom_timeline} function displays timelines of earthquakes based on the \code{GeomTimeline}.
}
\note{
The function only returns reasonable results for CE (Common Era) dates,
  because the \code{lubridate} package cannot handle BCE (Before Common Era) dates, yet.
}
\examples{
# size and colour as figure 1 of module 2
file <- system.file("extdata", "earthquakes.tsv.gz", package = "NOAAeq")
library(magrittr)
readr::read_delim(file = file, delim = "\\t") \%>\%
  eq_clean_data() \%>\%
  dplyr::filter(lubridate::year(DATE) \%in\% 2000:2017 & COUNTRY == "USA") \%>\%
  ggplot(aes(x = DATE, size = EQ_PRIMARY, fill = TOTAL_DEATHS)) +
  geom_timeline() +
  theme_classic() +
  theme(legend.position = "bottom") +
  scale_size_continuous(name = "Richter scale value") +
  scale_fill_continuous(name = "# deaths") +
  guides(size = guide_legend(order = 1),
         fill = guide_colourbar(order = 2))

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/eq_functions.R
\name{geom_timeline_label}
\alias{geom_timeline_label}
\title{Display timeline labels}
\usage{
geom_timeline_label(mapping = NULL, data = NULL, stat = "identity",
  position = "identity", na.rm = FALSE, show.legend = NA,
  inherit.aes = TRUE, ...)
}
\arguments{
\item{x}{A vector of dates.}

\item{label}{A character vector, e.g. the column \code{LOCATION_NAME}}

\item{n_max}{(optional) An integer value indicating the maximum number of labels per timeline.
The \code{n_max} highest values of \code{col_max} will be selected.}

\item{col_max}{(optional) The column based on which the \code{n_max} highest values will be selected.}

\item{y}{(optional) A factor indicating some stratification in which case
multiple time lines will be plotted for each level of the factor (e.g. country).}

\item{colour}{(optional) A colour used for colouring the vertical lines leading to the label.}
}
\value{
Timeline labels are added to a timeline plot.
}
\description{
The \code{geom_timeline_label} function displays timeline labels based on the \code{GeomTimelineLabel}.
It is usually used together with the \code{geom_timeline} function.
}
\examples{
# stratification and text annotations as in figure 3 of module 2
pckg <- getwd()
file <- grep("earthquakes.tsv.gz",
             list.files(path = pckg, all.files = TRUE, full.names = TRUE, recursive = TRUE),
            value = TRUE)

readr::read_delim(file = file, delim = "\\t") \%>\%
  eq_clean_data() \%>\%
  dplyr::filter(lubridate::year(DATE) \%in\% 2000:2017 & COUNTRY \%in\% c("USA", "CHINA") \%>\%
  ggplot(aes(x = DATE, y = COUNTRY, fill = TOTAL_DEATHS)) +
  geom_timeline() +
  geom_timeline_label(aes(label = LOCATION_NAME, col_max = EQ_PRIMARY), n_max = 5) +
  theme_classic() +
  theme(legend.position = "bottom",
        axis.title.y = element_blank(), axis.ticks.y = element_blank(), axis.line.y = element_blank()) +
  scale_fill_continuous(name = "# deaths", breaks = c(1, 87652))

}
